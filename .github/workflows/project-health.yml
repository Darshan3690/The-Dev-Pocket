name: DevPocket
on: [push, pull_request]

jobs:
  CI_for_Health_Check:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devpocket
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/devpocket"
      DIRECT_URL: "postgresql://postgres:postgres@localhost:5432/devpocket"
      CLERK_PUBLISHABLE_KEY: dummy
      CLERK_SECRET_KEY: dummy

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: .

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -U postgres; then
              echo "Postgres is ready"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Install Dependencies
        run: npm install

      - name: Prisma Generate
        run: npx prisma generate

      - name: Push Schema to DB
        run: npx prisma db push

      - name: Run and Health Check
        run: |
          npm run dev > server.log 2>&1 &
          server_pid=$!
          echo "Server started with PID: $server_pid"
          
          for i in {1..15}; do
            if curl -fs http://localhost:3000 > /dev/null; then
              echo "Server is up!"
              pkill -f "node"
              exit 0
            fi
            echo "Waiting for server... (attempt $i/15)"
            sleep 2
          done
          
          echo "Server failed to start. Printing logs:"
          cat server.log
          pkill -f "node"
          exit 1


